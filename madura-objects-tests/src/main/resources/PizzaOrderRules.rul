formula: OrderItem "description"
{
	description = format(name,name);
}
formula: Order "sum"
{
	amount = sum(orderItems.amount); 
}
formula: Pizza "p"
{
	itemType = ItemType.PIZZA;
}
formula: Drink "d"
{
	amount = 2.50;
}
formula: Drink "d"
{
	itemType = ItemType.DRINK;
}
formula: Extra "e"
{
	itemType = ItemType.EXTRA;
}
formula: Extra "e"
{
	amount = 8.00;
}
formula: Dessert "e"
{
	itemType = ItemType.DESSERT;
}
formula: Dessert "e"
{
	amount = 8.00;
}
rule: Pizza "p2"
{
	if (size == "Small")
	{
		readonly(testing);
		activate(testing);
		amount = 10;
	}
}
rule: Order "shoppingcartsize"
{
	if (count(orderItems) > 0)
	{
		shoppingCartStatus = format("shopping.cart.status",count(orderItems));
	}
}
rule: Order "shoppingcartsize"
{
	if (count(orderItems) == 0)
	{
		shoppingCartStatus = format("shopping.cart.status.empty",0);
	}
}
rule: Pizza "p3"
{
	if (size == "Medium")
	{
		activate(testing);
		require(testing);
		amount = 15;
	}
}
rule: Pizza "p4"
{
	if (size == "Large")
	{
		activate(testing);
		amount = 20;
	}
}
constraint: Pizza "p5"
{
	testDouble > 100D;
}
rule: Customer "dynamic"
{
	if (name == "fred")
	{
		dynamic = true;
	}
}

formula: Customer "BMI"
{
	bmi = weight / (height * height);
}
formula: Customer "Height Metric"
{
	height = heightMetric;
}
formula: Customer "Height Imperial"
{
	height = (heightFeet * 0.3048D) + (heightInches * 0.0254D);
}
formula: Customer "Weight metric"
{
	weight = weightKilos;
}
formula: Customer "Weight pounds"
{
	weight = weightPounds * 0.453D;
}
rule: Customer "try out external functions"
{
	if (name+${xyz} == "fredCC")
	{
		password = regex("abc","def");
		weight = combine(5,7);
	}
}


